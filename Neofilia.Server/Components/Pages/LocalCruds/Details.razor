@page "/locals/details"
@inject ILocalRepository DB
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>LocalModel</h4>
    <hr />
    @if (localmodel is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">ApplicationUserId</dt>
            <dd class="col-sm-10">@localmodel.ApplicationUserId</dd>
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@localmodel.Name</dd>
            <dt class="col-sm-2">Street</dt>
            <dd class="col-sm-10">@localmodel.Street</dd>
            <dt class="col-sm-2">CivilNumber</dt>
            <dd class="col-sm-10">@localmodel.CivilNumber</dd>
            <dt class="col-sm-2">PhoneNumber</dt>
            <dd class="col-sm-10">@localmodel.PhoneNumber</dd>
            <dt class="col-sm-2">EventStartsAt</dt>
            <dd class="col-sm-10">@localmodel.EventStartsAt</dd>
            <dt class="col-sm-2">EventEndsAt</dt>
            <dd class="col-sm-10">@localmodel.EventEndsAt</dd>
        </dl>
        <div>
            <a href="@($"/locals/edit?id={localmodel.Id}")">Edit</a> |
            <a href="@($"/locals")">Back to List</a>
        </div>
    }
</div>

@code {
    LocalModel? localmodel;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var local = await DB.GetById(Id);
        localmodel = local?.ToModel() ?? null;

        if (localmodel is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
